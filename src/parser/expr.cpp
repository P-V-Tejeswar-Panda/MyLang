/*
 * This file is generated by './tools/generate_ast_node.py'.
 * DO NOT EDIT MANUALLY!!, Add your spec to './tools/expr_spec.json' and it will be auto generated.
*/
#include <parser/expr.h>


ExprVisitor::ExprVisitor(){}


Expr::Expr(){}
void Expr::accept(ExprVisitor* visitor){
    visitor->visit(this);
}


Literal::Literal(enum TokenType ttype,std::string lexeme){
    this->ttype = ttype;
    this->lexeme = lexeme;
}


Grouping::Grouping(Expr* expr){
    this->expr = expr;
}


Unary::Unary(enum TokenType ttype,Expr* expr){
    this->ttype = ttype;
    this->expr = expr;
}


Binary::Binary(Expr* left,Operator* op,Expr* right){
    this->left = left;
    this->op = op;
    this->right = right;
}


Operator::Operator(enum TokenType ttype){
    this->ttype = ttype;
}



