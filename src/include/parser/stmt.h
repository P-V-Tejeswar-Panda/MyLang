/*
 * This file is generated by './tools/generate_ast_node.py'.
 * DO NOT EDIT MANUALLY!!, Add your spec to './tools/expr_spec.json' and it will be auto generated.
*/
#ifndef __STMT_H__
#define __STMT_H__
#include <lexer/token.h>
#include <string>
#include <parser/ast_node_types.h>
#include <parser/expr.h>

class StmtVisitor;

class Stmt{
public:
    Stmt();
    virtual enum AST_NODE_TYPES nodeType() = 0;
};

class Expression: public Stmt{
public:
    Expr* expression;
    Expression(Expr* expression);
    enum AST_NODE_TYPES nodeType();
    void accept(StmtVisitor* visitor);
};

class Print: public Stmt{
public:
    Expr* expression;
    Print(Expr* expression);
    enum AST_NODE_TYPES nodeType();
    void accept(StmtVisitor* visitor);
};

class StmtVisitor{
public:
    StmtVisitor();
    virtual void visit(Print* printStmt) = 0;
    virtual void visit(Expression* exprStmt) = 0;
};

#endif
